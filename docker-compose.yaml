name: firecrawl

x-common-service: &common-service
  build: apps/api
  networks:
    - backend
  environment:
    - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    - REDIS_RATE_LIMIT_URL=${REDIS_URL:-redis://redis:6379}
    - PLAYWRIGHT_MICROSERVICE_URL=${PLAYWRIGHT_MICROSERVICE_URL:-http://ulixee-service:3000/scrape}
    - PORT=${PORT:-3002}
    - NUM_WORKERS_PER_QUEUE=${NUM_WORKERS_PER_QUEUE}
    - BULL_AUTH_KEY=${BULL_AUTH_KEY}
    - TEST_API_KEY=${TEST_API_KEY}
    - HOST=${HOST:-0.0.0.0}
    - LOGGING_LEVEL=${LOGGING_LEVEL}
    - MAX_RAM=${MAX_RAM:-0.95}
    - MAX_CPU=${MAX_CPU:-0.95}
  extra_hosts:
    - "host.docker.internal:host-gateway"

services:
  ulixee-service:
    image: firecrawl/ulixee-service
    build:
      context: ./apps/ulixee-service-ts/
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - PROXY_URL=${PROXY_URL}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - HERO_MAX_CONCURRENT_BROWSERS=10
      - ULIXEE_DATABOX_SIZE_MB=100
      - NODE_OPTIONS=--max-old-space-size=2048
      - CHROME_SANDBOX=false
      - RUNNING_IN_CLOUD=${RUNNING_IN_CLOUD:-false}
      - CHROME_PATH=${CHROME_PATH:-/usr/bin/chromium}
    ports:
      - "3000:3000"
    networks:
      - backend
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    restart: unless-stopped

  puppeteer-service:
    image: trieve/puppeteer-service-ts
    build:
      context: ./apps/puppeteer-service-ts/
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - PROXY_SERVER=${PROXY_SERVER}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - TWOCAPTCHA_TOKEN=${TWOCAPTCHA_TOKEN}
      - MAX_CONCURRENCY=${MAX_CONCURRENCY}
    networks:
      - backend

  api:
    image: trieve/firecrawl
    <<: *common-service
    depends_on:
      - redis
      - ulixee-service
    ports:
      - "3002:3002"
    command: ["pnpm", "run", "start:production"]

  worker:
    <<: *common-service
    depends_on:
      - redis
      - ulixee-service
      - api
    command: ["pnpm", "run", "workers"]

  redis:
    image: redis:alpine
    networks:
      - backend
    command: redis-server --bind 0.0.0.0

networks:
  backend:
    driver: bridge
