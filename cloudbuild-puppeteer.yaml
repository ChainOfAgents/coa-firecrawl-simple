steps:
  # Build the puppeteer service image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:${COMMIT_SHA}',
        '-t', 'us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:latest',
        '-f', 'apps/puppeteer-service-ts/Dockerfile',
        'apps/puppeteer-service-ts'  # Subfolder as the build context
      ]
    
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:${COMMIT_SHA}']
    
  # Deploy puppeteer service to Cloud Run and store URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Deploy puppeteer service to Cloud Run
        gcloud run deploy puppeteer-service-firecrawl-simple \
          --image=us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:${COMMIT_SHA} \
          --platform=managed \
          --region=us-west2 \
          --cpu=1 \
          --memory=2Gi \
          --concurrency=10 \
          --timeout=5m \
          --min-instances=0 \
          --max-instances=10 \
          --service-account=crawlweb-sa@${PROJECT_ID}.iam.gserviceaccount.com \
          --set-env-vars="NODE_ENV=production,HOST=0.0.0.0"
        
        # Save the URL of the deployed puppeteer service for other builds
        SERVICE_URL=$(gcloud run services describe puppeteer-service-firecrawl-simple --platform=managed --region=us-west2 --format='value(status.url)')
        echo "$${SERVICE_URL}/scrape" > /workspace/puppeteer-service-url.txt
        gsutil cp /workspace/puppeteer-service-url.txt gs://${PROJECT_ID}-build-artifacts/puppeteer-service-url.txt

images:
  - 'us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:${COMMIT_SHA}'
  - 'us-west2-docker.pkg.dev/${PROJECT_ID}/docker-repo/puppeteer-service:latest'

options:
  logging: CLOUD_LOGGING_ONLY
