FROM node:20-slim AS base

# Create app directory
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm corepack@latest
RUN corepack enable

# Copy package files
COPY ./package.json ./pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install

# Install necessary build dependencies
RUN apt-get update -qq && \
    apt-get install -y \
    ca-certificates \
    git \
    golang-go \
    && update-ca-certificates

# Copy the rest of the application
COPY . ./

# Build Go module
COPY ./src/lib/go-html-to-md/ ./src/lib/go-html-to-md/
RUN cd src/lib/go-html-to-md && \
    go mod tidy && \
    go build -o html-to-markdown.so -buildmode=c-shared html-to-markdown.go && \
    chmod +x html-to-markdown.so

# Build the application
RUN pnpm run build

# Clean up build dependencies
RUN apt-get remove -y golang-go git && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives

# Create entrypoint script that adapts based on service type
RUN echo '#!/bin/bash\n\
# Determine service type based on the command\n\
if [[ "$@" == *"queue-worker.js"* ]]; then\n\
  SERVICE_TYPE="WORKER"\n\
else\n\
  SERVICE_TYPE="API"\n\
fi\n\
\n\
echo "===== ${SERVICE_TYPE} SERVICE ENVIRONMENT VARIABLES FOR DEBUGGING ====="\n\
echo "- PORT: $PORT"\n\
echo "- NODE_ENV: $NODE_ENV"\n\
echo "- QUEUE_PROVIDER: $QUEUE_PROVIDER"\n\
echo "- PLAYWRIGHT_MICROSERVICE_URL: $PLAYWRIGHT_MICROSERVICE_URL"\n\
\n\
echo "===== ALL ENVIRONMENT VARIABLES ====="\n\
printenv | sort\n\
echo "========================================"\n\
\n\
echo "Starting Node.js application..."\n\
echo "Command: $@"\n\
echo "Working directory: $(pwd)"\n\
echo "Files in current directory:"\n\
ls -la\n\
echo "========================================"\n\
\n\
# Run the compiled JavaScript directly\n\
exec "$@"\n' > /app/docker-entrypoint.sh && \
chmod +x /app/docker-entrypoint.sh

# Let Cloud Run set the PORT environment variable
EXPOSE 8080

# Use entrypoint script for both services
ENTRYPOINT ["/app/docker-entrypoint.sh"]

# Default to API service if no command is provided
# This will be overridden by the --command flag in Cloud Run
CMD ["node", "dist/src/index.js"]
