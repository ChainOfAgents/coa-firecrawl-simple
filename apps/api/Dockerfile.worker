FROM node:20-slim AS base

# Create app directory
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm corepack@latest
RUN corepack enable

# Copy package files
COPY ./package.json ./pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install

# Install necessary build dependencies
RUN apt-get update -qq && \
    apt-get install -y \
    ca-certificates \
    git \
    golang-go \
    && update-ca-certificates

# Copy the rest of the application
COPY . ./

# Build Go module
COPY ./src/lib/go-html-to-md/ ./src/lib/go-html-to-md/
RUN cd src/lib/go-html-to-md && \
    go mod tidy && \
    go build -o html-to-markdown.so -buildmode=c-shared html-to-markdown.go && \
    chmod +x html-to-markdown.so

# Build the application
RUN pnpm run build

# Install runtime dependencies
RUN apt-get install --no-install-recommends -y \
    chromium \
    chromium-sandbox \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives

# Create entrypoint script for debugging
RUN echo '#!/bin/bash\n\
echo "===== WORKER SERVICE ENVIRONMENT VARIABLES FOR DEBUGGING ====="\n\
echo "- PORT: $PORT"\n\
echo "- NODE_ENV: $NODE_ENV"\n\
echo "- HOST: $HOST"\n\
echo "- PUPPETEER_EXECUTABLE_PATH: $PUPPETEER_EXECUTABLE_PATH"\n\
\n\
echo "===== ALL ENVIRONMENT VARIABLES ====="\n\
printenv | sort\n\
echo "========================================"\n\
\n\
echo "Starting Node.js application..."\n\
echo "Command: $@"\n\
echo "Working directory: $(pwd)"\n\
echo "Files in current directory:"\n\
ls -la\n\
echo "========================================"\n\
\n\
# Run the compiled JavaScript directly\n\
exec "$@"\n' > /app/docker-entrypoint.sh && \
chmod +x /app/docker-entrypoint.sh

# Environment setup
ENV PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium"
ENV HOST="0.0.0.0"
# Cloud Run will set the PORT environment variable to 8080
EXPOSE 8080

# Use entrypoint script for the Worker service
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["node", "dist/src/services/queue-worker.js"]
